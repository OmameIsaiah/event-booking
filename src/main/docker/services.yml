version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      event_b_network:
        ipv4_address: 173.23.1.1

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
    networks:
      event_b_network:
        ipv4_address: 173.23.1.2

  event_booking_mysql:
    image: mysql:latest
    restart: always
    container_name: event_b_container
    volumes:
      #- mysql_event_booking_data:/var/lib/mysql
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: "bookingE_2024"
      MYSQL_USER: 'docker'
      MYSQL_PASSWORD: "bookingE_2024"
      MYSQL_DATABASE: 'eb_container'
    command: >
      --max-connections=10000 --bind-address=0.0.0.0

    ports:
      - "5505:3306"
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1' ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      event_b_network:
        ipv4_address: 173.23.1.3


networks:
  event_b_network:
    #external: true
    driver: bridge
    name: event_b_network
    ipam:
      config:
        - subnet: 173.23.0.0/16
          ip_range: 173.23.0.0/24

#networks:
#  event_b_network:
#    external: true
#    driver: bridge
