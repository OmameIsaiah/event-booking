server:
  port: 8080
  host: localhost
  servlet:
    contextPath: /event-booking

spring:
  application:
    name: event-booking
  kafka:
    consumer:
      group-id: event-booking-group-id
    producer:
      bootstrap-servers: http://${server.host}:19092
  h2:
    console.enabled: true
    console:
      path: /h2-console
      settings.trace: false
      settings.web-allow-others: false
  datasource:
    #url: jdbc:h2:mem:event_booking_db
    url: jdbc:h2:file:/data/event_booking_db4
    username: sa
    password: password
    driverClassName: org.h2.Driver
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect

  flyway:
    baselineOnMigrate: true
    validateOnMigrate: false
    enabled: true
    locations: classpath:db/migration/h2
    schemas: event_booking_db4
    url: jdbc:h2:file:/data/event_booking_db4
    #url: jdbc:mysql://${server.host}:3388/event_booking_db?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&autoReconnect=true&useSSL=false&noAccessToProcedureBodies=true
    user: sa
    password: password
    depends-on: entityManagerFactory
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: none #none, create, create-drop, update
      show-sql: 'true'
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        id:
          new_generator_mappings: false
        jdbc:
          time_zone: UTC+1
        show_sql: false
    show-sql: true
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 10MB
      max-request-size: 10MB
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  mail:
    host: smtp.gmail.com
    username: omameazy@gmail.com
    #Put in Docker Environment Variable File
    port: 465
    password: lrtciqzoohrtkmuq
    #Put in Docker Environment Variable File
    properties:
      mail:
        smtp:
          starttls:
            required: true
            enable: true
          ssl:
            enable: true
          auth: true
        transport:
          protocol: smtp
        debug: true
    protocol: smtp
    test-connection: false

app:
  api:
    auth:
      url: http://${server.host}:${server.port}${server.servlet.contextPath}/api/v1/auth
  security:
    encryption:
      key: bf538f592a721cfed601da884f4a03cf294cf4507b2e40b11058950407ef3cfa
  opt:
    expire:
      time: 600
  mail:
    sender:
      name: Event Booking Ltd.
      email: omameazy@gmail.com
  jwt:
    authorities:
      key: roles
    expirationDateInMs: 86400000
    header:
      string: Authorization
    jwtCookieName: event-booking
    jwtRefreshCookieName: event-booking-refresh
    refreshExpiration: 8640
    refreshExpirationDateInMs: 8640
    signing:
      key: 837f5b3ae7ccd9498d989595fab6da25b0ca2fbda6424b2d8d0bd24f43e39cd1
    token:
      prefix: Bearer
      validity: 100
